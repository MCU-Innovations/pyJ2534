# -*- coding: utf-8 -*-

import J2534
from J2534.Define import *


# print list off tools installed on your computer...
print(J2534.toolLIST())

# use pretty list above to choose the index of the tool you will be using...
J2534.setDevice(1)

# open connection to tool and grab divice id...
# ret will return 0 which means no errors detected...
ret, deviceID = J2534.ptOpen()


# toolINFO will output tool info and library device is using also api version example below...
# MongoosePro Chrysler FW:1.1.10.0 BL:1.1.8.0 SN: PKRGG0000015335C,
# MongoosePro Chrysler J2534 Library v1.1.10.0,
# 04.04
toolINFO = J2534.ptReadVersion(deviceID)
print(toolINFO)


# this will read current voltage at pin 16 of obd connector...
# will output a tuple with the first output should be a 0 meaning no error then second will be voltage
# example output = (0, 13.0)
pin_16_voltage = J2534.ReadVbat(deviceID)
print(pin_16_voltage)


# connect channel with correct comm protocol and baudrate...
# also returns channel id which gets passed to ecm filter...
ret, channelID = J2534.ptConnect(deviceID, ProtocolID.J1850VPW, 0, BaudRate.J1850VPW_10400)

# will clear receive buffer
J2534.ClearRxBuf(channelID)

# will clear transmit buffer
J2534.ClearTxBuf(channelID)

# close channel...
J2534.ptDisconnect(channelID)

# close tool connect...
J2534.ptClose(deviceID)
